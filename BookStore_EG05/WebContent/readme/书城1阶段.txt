学完Servlet以后： servlet作用： 接受请求 获取请求参数，调用其他类处理业务，根据处理结果给用户响应页面(转发、重定向)
项目第一阶段： 完成用户的登录注册
	- 构建项目：保证前端+java代码+数据库能够联通
	- 创建数据库+对应的表
	- 将页面拷贝到项目中
	
	开发项目的流程：   产品拿到需求设计项目流程图 -> 将流程图交给 前端工程师 将流程图转为静态项目页面
				 -> 后端工程师将静态项目修改为动态的(前端代码和后端代码+数据库结合)-> 交给测试人员测试 ->运维部署项目到服务器中
	
	后端开发项目的步骤：  从前向后分析，反向开发
		完成用户的注册和登录功能
		1、注册登录页面收集用户的登录注册信息
		2、登录注册表单数据应该提交给对应的LoginServlet/RegistServlet处理请求(获取参数)
		3、开发操作数据库的DAO(data access object)层:对数据库表进行增删改查的操作
			登录注册对用户表进行 增和查的操作  saveUser(User user) ,User getUserByUsernameAndPassword();
			开发中会为每张表创建对应的DAO，例如：将所有的和用户相关的操作放到UserDao中进行管理
		4、针对每张表创建与之对应的javabean:User
		5、数据库+用户表：bookstore_190222/bs_user
		6、导入数据库相关的jar包：mysql.jar/druid.jar/dbutils.jar + JDBCUtils+ BaseDao
	

	开发流程：
		1、创建数据库+表
			bs_user表字段： 
						id int(10) primary key auto_increment
						username varchar(30) unique not null
						password varchar(30) not null
						email varchar(30) unique
						
		2、在java代码中创建和表对应的实体类：   凡是需要通过dao操作的表，都会在java代码中为表创建一个实体类
			创建bean包：User： 属性和表的字段一样

		3、准备DAO:java程序和 数据库连接操作
			准备工作：
				3.1 相关jar包+配置文件
					将jdbc的配置参数文件拷贝到 src路径下
				3.2 BaseDao+JDBCUtils.java拷贝到项目中
					创建utils包：JDBCUtils.java
					创建dao包：存放所有的dao
				3.3 interface UserDao:  由于dao层的操作需求经常发生改变，所以一般使用接口来约束dao层
						为了封装所有的对bs_user表的数据库操作
							注册：int saveUser(User registUser);
							登录：User getUserByUsernameAndPassword(User loginUser);
					Class UserDaoImpl implements UserDao: 对接口方法的具体实现
				3.4 测试：
					推荐完成一个功能模块要进行单独测试			
		4、创建Servlet处理用户请求
			登录请求：
				用户从Login.html页面提交登录信息给LoginServlet：
						> 获取登录参数
						> 调用UserDaoImpl.getUserByUsernameAndPassword(传入的参数封装的User对象);
						> 根据dao层方法的返回结果给用户响应
								如果登录成功，重定向到login_success.html给用户响应
								如果登录失败，转发到login.html页面让用户继续登录
			注册请求：
				用户从regist.html页面提交注册请求给RegistServlet:
						> 获取注册信息
						> 调用UserDaoImpl.saveUser(注册信息封装的对象);
						> 根据dao的方法处理返回的结果给用户响应
							如果注册失败，转发到regist.html让用户继续注册
							如果注册成功，重定向到regist_success.html
							
		5、修改登录和注册页面的表单的action地址，提交给对应的Servlet处理请求
		6、注册或登录失败后我们使用的是转发跳转到登录或注册页面，转发会造成页面中的相对路径失效
			- 解决：使用绝对路径或者 base+相对路径
			
			
			 base+相对路径